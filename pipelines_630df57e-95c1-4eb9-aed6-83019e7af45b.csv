2023-08-22 17:01:04,"
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LogisticRegression

pipe = Pipeline([
    ('imputer', SimpleImputer()),
    ('scaler', StandardScaler()),
    ('classifier', LogisticRegression(C=20.0, dual=False, penalty='l2', solver='lbfgs'))
])

pipe.fit(X_train, y_train)
",0.5497005988023952
2023-08-22 17:01:08,"from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.kernel_approximation import RBFSampler

pipe = Pipeline([
    ('imputer', SimpleImputer()),
    ('sampler', RBFSampler(gamma=0.45)),
    ('classifier', ExtraTreesClassifier(bootstrap=False, criterion='gini', max_features=0.3, min_samples_leaf=4, min_samples_split=12, n_estimators=150))
])

pipe.fit(X_train, y_train)",0.5844311377245509
2023-08-22 17:01:11,"from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.naive_bayes import GaussianNB
from sklearn.kernel_approximation import RBFSampler

pipe = Pipeline([
    ('imputer', SimpleImputer()),
    ('sampler', RBFSampler(gamma=0.25)),
    ('classifier', GaussianNB())
])

pipe.fit(X_train, y_train)",0.46107784431137727
2023-08-22 17:01:14,"
from mlxtend.classifier import EnsembleVoteClassifier

model = EnsembleVoteClassifier(clfs=list_pipelines, voting='soft', use_clones=False)
model.fit(X_train, y_train)
",0.5053892215568863
