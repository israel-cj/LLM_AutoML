2023-08-22 16:57:11,"
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression

# Pipeline: LogisticRegression(StandardScaler(data), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
pipe = Pipeline([
    ('imputer', SimpleImputer()),
    ('scaler', StandardScaler()),
    ('classifier', LogisticRegression(C=20.0, dual=False, penalty='l2', solver='lbfgs'))
])

pipe.fit(X_train, y_train)
",0.5497005988023952
2023-08-22 16:57:16,"from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import ExtraTreesClassifier

# Pipeline: ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=2, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)
pipe = Pipeline([
    ('imputer', SimpleImputer()),
    ('sampler', RBFSampler(gamma=0.35000000000000003)),
    ('classifier', ExtraTreesClassifier(bootstrap=False, criterion='entropy', max_features=0.5, min_samples_leaf=2, min_samples_split=15, n_estimators=100))
])

pipe.fit(X_train, y_train)",name 'RBFSampler' is not defined
2023-08-22 16:57:23,"from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.kernel_approximation import RBFSampler

# Pipeline: ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=2, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)
pipe = Pipeline([
    ('imputer', SimpleImputer()),
    ('sampler', RBFSampler(gamma=0.35000000000000003)),
    ('classifier', ExtraTreesClassifier(bootstrap=False, criterion='entropy', max_features=0.5, min_samples_leaf=2, min_samples_split=15, n_estimators=100))
])

pipe.fit(X_train, y_train)",0.5796407185628742
2023-08-22 16:57:28,"
from mlxtend.classifier import EnsembleVoteClassifier

model = EnsembleVoteClassifier(clfs=list_pipelines, voting='hard', use_clones=False, fit_base_estimators=True)
model.fit(X_train, y_train)
",0.5604790419161677
