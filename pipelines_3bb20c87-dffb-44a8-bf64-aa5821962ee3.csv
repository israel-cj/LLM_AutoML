2023-08-22 16:49:49,"
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression

pipe = Pipeline([
    ('scaler', StandardScaler()),
    ('classifier', LogisticRegression(C=20.0, dual=False, penalty='l2', solver='lbfgs'))
])

pipe.fit(X_train, y_train)
",0.5497005988023952
2023-08-22 16:49:50,"from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler, Normalizer
from sklearn.linear_model import LogisticRegression

pipe = Pipeline([
    ('scaler', StandardScaler()),
    ('normalizer', Normalizer(norm='l1')),
    ('classifier', LogisticRegression(C=20.0, dual=False, penalty='l2', solver='lbfgs'))
])

pipe.fit(X_train, y_train)",0.5568862275449101
2023-08-22 16:49:54,"from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.kernel_approximation import RBFSampler

pipe = Pipeline([
    ('sampler', RBFSampler(gamma=0.35)),
    ('classifier', ExtraTreesClassifier(bootstrap=False, criterion='entropy', max_features=0.5, min_samples_leaf=2, min_samples_split=15, n_estimators=100))
])

pipe.fit(X_train, y_train)",0.5808383233532934
2023-08-22 16:50:19,"
from mlxtend.classifier import EnsembleVoteClassifier

model = EnsembleVoteClassifier(
    clfs=list_pipelines,
    voting='soft',
    weights=None,
    verbose=0,
    use_clones=True,
    fit_base_estimators=True
)

model.fit(X_train, y_train)
",0.5676646706586826
