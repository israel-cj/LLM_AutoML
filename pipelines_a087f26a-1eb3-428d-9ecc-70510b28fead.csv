2023-09-11 10:35:51,"
from sklearn.pipeline import make_pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import MinMaxScaler
from sklearn.linear_model import LogisticRegression

pipe = make_pipeline(
    SimpleImputer(),
    MinMaxScaler(),
    LogisticRegression()
)
pipe.fit(X_train, y_train)
",0.6260361957648948
2023-09-11 10:36:17,"
from sklearn.pipeline import make_pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier

pipe = make_pipeline(
    SimpleImputer(),
    StandardScaler(),
    RandomForestClassifier(n_estimators=100, max_depth=10)
)
pipe.fit(X_train, y_train)
",0.65873950423176
2023-09-11 10:38:50,"
from sklearn.pipeline import make_pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import PowerTransformer
from sklearn.ensemble import GradientBoostingClassifier

pipe = make_pipeline(
    SimpleImputer(),
    PowerTransformer(),
    GradientBoostingClassifier(n_estimators=200, learning_rate=0.1, max_depth=5)
)
pipe.fit(X_train, y_train)",0.6646405512996354
